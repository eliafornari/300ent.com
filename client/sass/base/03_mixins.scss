/*.................................................................................*/
//---------------------------------------------------------------MEDIA QUERIES---------------------------------------------------------------------
$break-phone: 767px;
$break-phone-landscape: 767px;
$break-tablet: 1022px;
$break-tablet-landscape: 1024px;
$break-laptop-small: 1280px;
$break-laptop-medium: 1440px;
$break-laptop-large: 1920px;
$break-desktop: 50000px;
/*$break-large-desktop: 2500px;*/
/*$break-infinite: 500000px;*/

@mixin respond-to($media) {
/*  @if $media == large-desktop {
    @media only screen and (min-width: $break-large-desktop + 1) and (max-width: $break-infinite) { @content; }
  }*/
  @if $media == desktop {
    @media only screen and (min-width: $break-laptop-large + 1) and (max-width: $break-desktop) { @content; }
  }
  @else if $media == laptop-large {
    @media only screen and (min-width: $break-laptop-medium + 1) and (max-width: $break-laptop-large) { @content; }
  }
  @else if $media == laptop-medium {
    @media only screen and (min-width: $break-laptop-small + 1) and (max-width: $break-laptop-medium) { @content; }
  }
  @else if $media == laptop-small {
    @media only screen and (min-width: $break-tablet + 1) and (max-width: $break-laptop-small) { @content; }
  }

  ////////////|||||||||||..just changed the tablet media query below because it was not reading the landscape view: 1024px is the tablet landscape width..||||||||||||||\\\\\\\\\\

  @else if $media == tablet-landscape {
    @media only screen and (min-width: $break-phone + 1) and (max-width: $break-tablet-landscape) and (orientation: landscape) { @content; }
  }
  @else if $media == tablet-portrait {
    @media only screen and (min-width: $break-phone + 1) and (max-width: $break-tablet) and (orientation: portrait) { @content; }
  }
  @else if $media == phone {
    @media only screen and (min-width: 0px) and (max-width: $break-phone) { @content; }
  }

  //These are only for the real device
  @else if $media == tablet-landscape-device {
    @media only screen and (min-device-width: $break-phone + 1) and (max-device-width: $break-tablet) and (orientation: landscape) { @content; }
  }
  @else if $media == tablet-portrait-device {
    @media only screen and (min-device-width: $break-phone + 1) and (max-device-width: $break-tablet) and (orientation: portrait) { @content; }
  }
  @else if $media == phone-device {
    @media only screen and (min-width: 0px) and (max-device-width: $break-phone) { @content; }
  }
  @else if $media == phone-landscape-device {
        @media only screen and (min-width: 0px) and (max-width: $break-phone) and (orientation: landscape) { @content; }
      }
}


















/*....................................SCSS MIXINS..................................*/


@mixin hover-effect-opacity($opacity: 1, $hover: .6){
  opacity: $opacity;
  transition:         opacity $transition-medium ease;
  -webkit-transition: opacity $transition-medium ease;
  -moz-transition:    opacity $transition-medium ease;
  -ms-transition:     opacity $transition-medium ease;
  -o-transition:      opacity $transition-medium ease;

  &:hover {
    opacity: $hover;
    @include respond-to(phone-device) {
        opacity: $opacity !important;
    }
    @include respond-to(tablet-portrait-device) {
        opacity: $opacity !important;
    }
    @include respond-to(tablet-landscape-device) {
        opacity: $opacity !important;
    }
  }
}


@mixin hover-effect-color($color, $hover){
  color: $color;
  transition:         color $transition-medium ease;
  -webkit-transition: color $transition-medium ease;
  -moz-transition:    color $transition-medium ease;
  -ms-transition:     color $transition-medium ease;
  -o-transition:      color $transition-medium ease;
  // opacity: $hover;

  &:hover {
    color: $hover;
    @include respond-to(phone-device) {
        color: $color !important;
    }
    @include respond-to(tablet-portrait-device) {
        color: $color !important;
    }
    @include respond-to(tablet-landscape-device) {
        color: $color !important;
    }
  }

}

@mixin transform-transition($duration: $transition-fast){
  transition:         transform $duration ease-in-out;
  -webkit-transition: -webkit-transform $duration ease-in-out;
  -moz-transition:    -moz-transform $duration ease-in-out;
  -ms-transition:     -ms-transform $duration ease-in-out;
  -o-transition:      -o-transform $duration ease-in-out;
}

@mixin transform-element($coordinate){
  transform: $coordinate;
  -ms-transform: $coordinate; /* IE 9 */
 	-webkit-transform: $coordinate; /* Safari */
  transform-origin: 0 0;
  @include transform-transition();
}


@mixin keyframes($name, $name_back, $position_initial, $position_final, $position_initial_mobile, $position_final_mobile){


      @keyframes $name {
        0% {@include transform-element($position_initial)}
        100% {@include transform-element($position_final)}
      }

      @-webkit-keyframes $name {
        0% {@include transform-element($position_initial)}
        100% {@include transform-element($position_final)}
      }

      @-moz-keyframes $name {
        0% {@include transform-element($position_initial)}
        100% {@include transform-element($position_final)}
      }

      @-ms-keyframes $name {
        0% {@include transform-element($position_initial)}
        100% {@include transform-element($position_final)}
      }

      @-o-keyframes $name {
        0% {@include transform-element($position_initial)}
        100% {@include transform-element($position_final)}
      }





      @keyframes $name_back {
        0% {@include transform-element($position_final)}
        100% {@include transform-element($position_initial)}
      }

      @-webkit-keyframes $name_back {
        0% {@include transform-element($position_final)}
        100% {@include transform-element($position_initial)}
      }

      @-moz-keyframes $name_back {
        0% {@include transform-element($position_final)}
        100% {@include transform-element($position_initial)}
      }

      @-ms-keyframes $name_back {
        0% {@include transform-element($position_final)}
        100% {@include transform-element($position_initial)}
      }

      @-o-keyframes $name_back {
        0% {@include transform-element($position_final)}
        100% {@include transform-element($position_initial)}
      }








  @include respond-to(phone){

        @keyframes $name {
          0% {@include transform-element($position_initial_mobile)}
          100% {@include transform-element($position_final_mobile)}
        }

        @-webkit-keyframes $name {
          0% {@include transform-element($position_initial_mobile)}
          100% {@include transform-element($position_final_mobile)}
        }

        @-moz-keyframes $name {
          0% {@include transform-element($position_initial_mobile)}
          100% {@include transform-element($position_final_mobile)}
        }

        @-ms-keyframes $name {
          0% {@include transform-element($position_initial_mobile)}
          100% {@include transform-element($position_final_mobile)}
        }

        @-o-keyframes $name {
          0% {@include transform-element($position_initial_mobile)}
          100% {@include transform-element($position_final_mobile)}
        }





        @keyframes $name_back {
          0% {@include transform-element($position_final_mobile)}
          100% {@include transform-element($position_initial_mobile)}
        }

        @-webkit-keyframes $name_back {
          0% {@include transform-element($position_final_mobile)}
          100% {@include transform-element($position_initial_mobile)}
        }

        @-moz-keyframes $name_back {
          0% {@include transform-element($position_final_mobile)}
          100% {@include transform-element($position_initial_mobile)}
        }

        @-ms-keyframes $name_back {
          0% {@include transform-element($position_final_mobile)}
          100% {@include transform-element($position_initial_mobile)}
        }

        @-o-keyframes $name_back {
          0% {@include transform-element($position_final_mobile)}
          100% {@include transform-element($position_initial_mobile)}
        }

    }

}


@mixin center-transform($left, $top){
  transform: translate3d($left,$top, 0);
  -webkit-transform:  translate3d($left,$top, 0);
  -moz-transform:     translate3d($left,$top, 0);
  -ms-transform:      translate3d($left,$top, 0);
  -o-transform:       translate3d($left,$top, 0);
}


@mixin header($color, $hasHover){

  font-size: $font-size-title;
  line-height: $line-height-title;
  font-family: camptonBold;

  @if $hasHover == 'yes'{
            @if $color == 'red' {
                color: $red;
                @include hover-effect-color(#000000, $red);
               // if width is not passed, or empty do this
            } @else if $color == 'white' {
                 color: #FFFFFF;
                 @include hover-effect-color(#FFFFFF, #e60000);
            }  @else if $color == 'black' {
                 color: #000000;
                 @include hover-effect-color(#000000, #d3d3d3);
            }
  } @else{
            @if $color == 'red' {
                color: $red;
               // if width is not passed, or empty do this
           } @else if $color == 'white' {
                 color: #FFFFFF;
           }  @else if $color == 'black' {
                color: #000000;
           }
  }



}



// ........................................................FONT LINEHEIGHTS

@mixin title(){
  font-size: $font-size-title;
  line-height: $line-height-title;
  font-family: $font-family-title;
  @include respond-to(phone){
    font-size: $font-size-title-mobile;
    line-height: $line-height-title-mobile;

  }
}

@mixin subtitle(){
  font-size: $font-size-subtitle;
  line-height: $line-height-subtitle;
  font-family: $font-family-subtitle;
  @include respond-to(phone){
    font-size: $font-size-subtitle-mobile;
    line-height: $line-height-subtitle-mobile;
  }
}

@mixin list(){
  font-size: $font-size-list;
  line-height: $line-height-list;
  font-family: $font-family-list;
  @include respond-to(phone){
    font-size: $font-size-list-mobile;
    line-height: $line-height-list-mobile;
  }
}

@mixin paragraph(){
  font-size: $font-size-paragraph;
  line-height: $line-height-paragraph;
  font-family: $font-family-paragraph;
  @include respond-to(phone){
    font-size: $font-size-paragraph-mobile;
    line-height: $line-height-paragraph-mobile;
  }

}

// test 1s 2s 3 alternate backwards

.blink {
    animation: blink-animation 0.15s 2s 2;
    -webkit-animation: blink-animation 0.15s 2s 2;
    -o-animation: blink-animation 0.15s 2s 2;
    -moz-animation: blink-animation 0.15s 2s 2;
  }
  @keyframes blink-animation {
    to {
      fill: $red;
    }
  }
  @-webkit-keyframes blink-animation {
    to {
      fill: $red;
    }
  }


  @mixin path-red(){

    svg path{
      transition:         fill $transition-medium ease;
      -webkit-transition: fill $transition-medium ease;
      -moz-transition:    fill $transition-medium ease;
      -ms-transition:     fill $transition-medium ease;
      -o-transition:      fill $transition-medium ease;
    }

    &:hover{
      svg path{
        fill: $red;
      }
    }
  }

  @mixin stroke-red(){

    rect, polyline{
      transition:         stroke $transition-medium ease;
      -webkit-transition: stroke $transition-medium ease;
      -moz-transition:    stroke $transition-medium ease;
      -ms-transition:     stroke $transition-medium ease;
      -o-transition:      stroke $transition-medium ease;
    }



    &:hover{
      svg{
        rect, polyline{
          stroke: $red;
        }
      }

    }
  }











  @mixin keyframes-notransform($name, $name_back, $position_initial, $position_final, $position_initial_mobile, $position_final_mobile){


        @keyframes $name {
          0% {left:$position_initial}
          100% {left:$position_final}
        }

        @-webkit-keyframes $name {
          0% {left:$position_initial}
          100% {left:$position_final}
        }

        @-moz-keyframes $name {
          0% {left:$position_initial}
          100% {left:$position_final}
        }

        @-ms-keyframes $name {
          0% {left:$position_initial}
          100% {left:$position_final}
        }

        @-o-keyframes $name {
          0% {left:$position_initial}
          100% {left:$position_final}
        }





        @keyframes $name_back {
          0% {left:$position_final}
          100% {left:$position_initial}
        }

        @-webkit-keyframes $name_back {
          0% {left:$position_final}
          100% {left:$position_initial}
        }

        @-moz-keyframes $name_back {
          0% {left:$position_final}
          100% {left:$position_initial}
        }

        @-ms-keyframes $name_back {
          0% {left:$position_final}
          100% {left:$position_initial}
        }

        @-o-keyframes $name_back {
          0% {left:$position_final}
          100% {left:$position_initial}
        }








    @include respond-to(phone){

          @keyframes $name {
            0% {left:$position_initial_mobile}
            100% {left:$position_final_mobile}
          }

          @-webkit-keyframes $name {
            0% {left:$position_initial_mobile}
            100% {left:$position_final_mobile}
          }

          @-moz-keyframes $name {
            0% {left:$position_initial_mobile}
            100% {left:$position_final_mobile}
          }

          @-ms-keyframes $name {
            0% {left:$position_initial_mobile}
            100% {left:$position_final_mobile}
          }

          @-o-keyframes $name {
            0% {left:$position_initial_mobile}
            100% {left:$position_final_mobile}
          }





          @keyframes $name_back {
            0% {left:$position_final_mobile}
            100% {left:$position_initial_mobile}
          }

          @-webkit-keyframes $name_back {
            0% {left:$position_final_mobile}
            100% {left:$position_initial_mobile}
          }

          @-moz-keyframes $name_back {
            0% {left:$position_final_mobile}
            100% {left:$position_initial_mobile}
          }

          @-ms-keyframes $name_back {
            0% {left:$position_final_mobile}
            100% {left:$position_initial_mobile}
          }

          @-o-keyframes $name_back {
            0% {left:$position_final_mobile}
            100% {left:$position_initial_mobile}
          }

      }

  }
